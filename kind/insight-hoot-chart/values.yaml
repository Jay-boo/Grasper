# Default values for insight-hoot-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

kafka:
  labels:
    app: kafka
  Kafka:
    ContainerPort: 9092

  Zookeeper:
    ContainerPort: 2181

  KafkaUI:
    Port: 8080
      
  KafkaConnect:
    Port: 8083
    rss_json: |
      {
        "stackoverflow": "https://stackoverflow.blog/feed",
        "developpez": "https://cloud-computing.developpez.com/rss.php",
        "4sysops": "https://4sysops.com/feed/",
        "adamtheautomator": "https://adamtheautomator.com/feed/",
        "macmule": "https://macmule.com/feed/",
        "web3isgoinggreat": "https://www.web3isgoinggreat.com/feed",
        "thezvi": "https://thezvi.substack.com/feed",
        "zdnet": [
          "https://www.zdnet.com/topic/artificial-intelligence/rss.xml",
          "https://www.zdnet.com/topic/cloud/rss.xml",
          "https://www.zdnet.com/topic/digital-transformation/rss.xml"
        ],
        "databricks": "https://www.databricks.com/feed",
        "techtoday": "https://techtoday.co/category/tech-news/feed/",
        "reddittech": "https://www.reddit.com/r/technology/top.rss?t=day",
        "slashdot": "http://rss.slashdot.org/Slashdot/slashdotMain",
        "theverge": "https://www.theverge.com/rss/ai-artificial-intelligence/index.xml",
        "techcrunch": "https://techcrunch.com/feed/",
        "theguardian": "https://www.theguardian.com/us/technology/rss",
        "arstechnica": "https://feeds.arstechnica.com/arstechnica/technology-lab",
        "wsj": "https://feeds.a.dj.com/rss/RSSWSJD.xml",
        "ft": "https://www.ft.com/technology?format=rss",
        "dbta": "https://feeds.feedburner.com/DBTA-Articles"
      }


psql:
  labels:
    app: psql
  pgConfigmap:
    name: pg-secret-configmap 
  persistentVolume:
    name: pg-pv
    spec: 
      capacity:
        storage: 5Gi
  persistentVolumeClaim:
    name: pg-pvc
    resources:
      requests:
        storage: 5Gi
  service:
    name: postgresdb
    port: 5432
  deployment:
    name: psql-deployment
    containers:
      name: psql-container
      image: postgres
      containerPort: 5432


 sof:
  labels:
    app: sof
  service:
    name: sof
    port: 5432
  deployment:
    name: sof-deployment
    containers:
      name: sof-container
      image: jamdatafab/sof-wrapper
      tag: latest
      containerPort: 5432
